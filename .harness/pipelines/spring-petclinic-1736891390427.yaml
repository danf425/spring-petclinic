pipeline:
  identifier: Build_danf425_spring_petclinic_1736891392791
  name: Build spring-petclinic
  orgIdentifier: sandbox
  projectIdentifier: soto_sandbox
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github
        repoName: danf425/spring-petclinic
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Plugin
                  name: Test Analysis Plugin
                  identifier: Plugin_1
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: plugins/test-analysis:latest
                    settings:
                      test_globs: folder1/*.xml, folder2/*.xml
                      quarantine_file: quarantinelist.yaml
                      fail_on_quarantine: true
              - step:
                  identifier: verify_output_variables
                  type: Run
                  name: Verify Output Variables
                  spec:
                    shell: Sh
                    command: |-
                      #!/bin/sh
                      echo "Test Analysis Plugin Results:"
                      echo "Total Tests: <+steps.Plugin_1.output.outputVariables.TOTAL_TESTS>"
                      echo "Passed Tests: <+steps.Plugin_1.output.outputVariables.PASSED_TESTS>"
                      echo "Failed Tests: <+steps.Plugin_1.output.outputVariables.FAILED_TESTS>"
                      echo "Skipped Tests: <+steps.Plugin_1.output.outputVariables.SKIPPED_TESTS>"
                      echo "Error Tests: <+steps.Plugin_1.output.outputVariables.ERROR_TESTS>"
              - step:
                  identifier: echo
                  name: echo
                  spec:
                    command: echo hello world
                  timeout: ""
                  type: Run
              - step:
                  identifier: scalabuild
                  name: scala_build
                  spec:
                    command: "gradle build "
                  timeout: ""
                  type: Run
              - step:
                  identifier: scalatest
                  name: scala_test
                  spec:
                    command: "./gradlew test\n\t\txml_file=$(find /harness/build/test-results/test -type f -name \"*.xml\" | head -n 1)\n\n\t\tif [ -n \"$xml_file\" ]; then\n\t\t\tcp \"$xml_file\" /harness/reports.xml\n\t\t\techo \"XML file copied to /harness/reports.xml\"\n\t\telse\n\t\t\techo \"No XML file found in /path\"\n\t\tfi"
                    reports:
                      spec:
                        paths:
                          - /harness/reports.xml
                      type: JUnit
                  timeout: ""
                  type: Run
          platform:
            arch: Amd64
            os: Linux
          runtime:
            spec: {}
            type: Cloud
        type: CI
